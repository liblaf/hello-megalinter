# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
# https://github.com/oxsecurity/megalinter/blob/main/mega-linter-runner/generators/mega-linter/templates/mega-linter.yml
# https://megalinter.io

name: MegaLinter

on:
  push:
  pull_request:

jobs:
  mega-linter:
    name: MegaLinter
    permissions:
      contents: write
      issues: write
      pull-requests: write
      security-events: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare Linter Rules
        run: |-
          LINTER_RULES_PATH="https://github.com/liblaf/.github/raw/refs/heads/main/.github/linters"
          LINTER_RULES=(
            .checkov.yml
            .devskim.json
            .ruff.toml
            kics.config
            pyrightconfig.json
          )
          MISSING_LINTER_RULES=()

          BRIGHT_RED="\x1b[91m"
          BRIGHT_GREEN="\x1b[92m"
          RESET="\x1b[0m"

          function download() {
            local_path=".github/linters/$1"
            remote_path="$LINTER_RULES_PATH/$1"
            if [[ -f ".github/linters/$1" ]]; then
              return
            fi
            MISSING_LINTER_RULES+=("$1")
            mkdir --parents --verbose ".github/linters"
            if wget --output-document="$local_path" "$remote_path"; then
              printf "${BRIGHT_GREEN}SAVED: %s${RESET}\n" "$local_path"
            else
              printf "${BRIGHT_RED}DOWNLOAD ERROR: %s${RESET}\n" "$local_path"
              rm --force "$local_path"
            fi
          }

          for rule in "${LINTER_RULES[@]}"; do
            download "$rule"
          done

          echo "MISSING_LINTER_RULES=${MISSING_LINTER_RULES[*]}" >> "$GITHUB_ENV"
      - id: ml
        name: MegaLinter
        uses: oxsecurity/megalinter@v8
        env:
          GITHUB_TOKEN: ${{ github.token }}
          # https://megalinter.io/latest/config-variables/
          # Common Variables
          MEGALINTER_CONFIG: .github/.mega-linter.yaml
          VALIDATE_ALL_CODEBASE: true
          # Reporters
          TEXT_REPORTER: true
          GITHUB_COMMENT_REPORTER: true
          GITHUB_STATUS_REPORTER: true
          SARIF_REPORTER: true
          UPDATED_SOURCES_REPORTER: true
          CONFIG_REPORTER: true
          CONSOLE_REPORTER: true
          JSON_REPORTER: true
          MARKDOWN_SUMMARY_REPORTER: true
      - if: success() || failure()
        name: Remove Linter Rules
        run: |-
          IFS=" " read -a MISSING_LINTER_RULES -r <<< "$MISSING_LINTER_RULES"
          for rule in "${MISSING_LINTER_RULES[@]}"; do
            rm --force --verbose ".github/linters/$rule"
          done
      - if: success() || failure()
        name: Archive Production Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: megalinter-reports
          path: |-
            mega-linter.log
            megalinter-reports/
      - if: success() || failure()
        name: Upload Megalinter Scan Results To Github Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: megalinter-reports/megalinter-report.sarif
      - if: success() || failure()
        name: Add GitHub Summary
        run: cat megalinter-reports/megalinter-report.md >> "$GITHUB_STEP_SUMMARY"
      - if: >-
          steps.ml.outputs.has_updated_sources == 1 &&
          github.ref != 'refs/heads/main' &&
          (
            github.event_name == 'push' ||
            github.event.pull_request.head.repo.full_name == github.repository
          ) &&
          !contains(github.event.head_commit.message, 'skip fix')
        name: Prepare Commit
        run: sudo chown -Rc $UID .git/
      - if: >-
          steps.ml.outputs.has_updated_sources == 1 &&
          github.ref != 'refs/heads/main' &&
          (
            github.event_name == 'push' ||
            github.event.pull_request.head.repo.full_name == github.repository
          ) &&
          !contains(github.event.head_commit.message, 'skip fix')
        name: Commit And Push Applied Linter Fixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(mega-linter): apply linters fixes"
          branch: >-
            ${{
              github.event.pull_request.head.ref ||
              github.head_ref ||
              github.ref
            }}
          add_options: --update
          commit_user_name: megalinter-bot
          commit_user_email: nicolas.vuillamy@ox.security
